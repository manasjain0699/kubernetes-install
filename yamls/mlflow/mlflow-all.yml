apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: mlflow
spec: {}
status: {}
---
apiVersion: v1
data:
  PGDATA: /var/lib/postgresql/mlflow/data
  POSTGRES_DB: mlflow_db
  POSTGRES_PASSWORD: WD3ky5QF0MPB4cU4Wbqa
  POSTGRES_USER: mlflow_user
kind: ConfigMap
metadata:
  labels:
    app: mlflow-postgres
  name: mlflow-postgres-config-6kbmct85t6
  namespace: mlflow
---
apiVersion: v1
kind: Service
metadata:
  name: mlflow-minio-service
  namespace: mlflow
spec:
  ports:
  - port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: mlflow-minio
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    svc: mlflow-postgres-service
  name: mlflow-postgres-service
  namespace: mlflow
spec:
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: mlflow-postgres
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: mlflow-service
  namespace: mlflow
spec:
  ports:
  - name: http
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: mlflow-deployment
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mlflow-pvc
  namespace: mlflow
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow-deployment
  namespace: mlflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlflow-deployment
  template:
    metadata:
      labels:
        app: mlflow-deployment
    spec:
      containers:
      - args:
        - --host=0.0.0.0
        - --port=5000
        - --backend-store-uri=postgresql://mlflow_user:WD3ky5QF0MPB4cU4Wbqa@mlflow-postgres-service.mlflow.svc.cluster.local:5432/mlflow_db
        - --default-artifact-root=s3://models/
        - --workers=2
        env:
        - name: MLFLOW_S3_ENDPOINT_URL
          value: http://mlflow-minio-service.mlflow.svc.cluster.local:9000/
        - name: AWS_ACCESS_KEY_ID
          value: minio
        - name: AWS_SECRET_ACCESS_KEY
          value: BS6PpUKnW^Bkc@$l$QAsY$p#l
        image: katonic/mlflow:latest
        imagePullPolicy: Always
        name: mlflow-deployment
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
      imagePullSecrets:
      - name: docker-hub-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow-minio
  namespace: mlflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlflow-minio
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mlflow-minio
    spec:
      containers:
      - args:
        - server
        - /data
        env:
        - name: MINIO_ACCESS_KEY
          value: "minio"
        - name: MINIO_SECRET_KEY
          value: "BS6PpUKnW^Bkc@$l$QAsY$p#l"
        image: katonic/ml-pipeline-minio:RELEASE.2019-08-14T20-37-41Z-license-compliance
        imagePullPolicy: IfNotPresent
        name: minio
        ports:
        - containerPort: 9000
          protocol: TCP
        resources:
          requests:
            cpu: 20m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data
          name: data
          subPath: minio
      imagePullSecrets:
      - name: docker-hub-secret
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: mlflow-pvc
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: mlflow-postgres
  name: mlflow-postgres
  namespace: mlflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlflow-postgres
  serviceName: mlflow-postgres-service
  template:
    metadata:
      labels:
        app: mlflow-postgres
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: mlflow-postgres-config-6kbmct85t6
        image: katonic/mlflow-postgres:11
        name: mlflow-postgres
        ports:
        - containerPort: 5432
          protocol: TCP
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
        volumeMounts:
        - mountPath: /var/lib/postgresql/mlflow
          name: mlflow-pvc
  volumeClaimTemplates:
  - metadata:
      name: mlflow-pvc
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
