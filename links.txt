#Gateway
kubectl create secret -n istio-system tls istio-ingressgateway-certs --key certs/tls.key --cert certs/tls.crt
#Seldon
helm install seldon-core seldon-core-operator --repo https://storage.googleapis.com/seldon-charts --set usageMetrics.enabled=true --set istio.gateway=kubeflow/kubeflow-gateway --namespace seldon-system --set istio.enabled=true
kubectl create configmap -n seldon-system model-usage-rules --from-file=yamls/seldon/model-usage.rules.yml --dry-run=server -o yaml | kubectl apply -f -
helm upgrade seldon-core-analytics seldonio/seldon-core-analytics --version 1.4.0 --namespace seldon-system --install -f yamls/seldon/analytics-values.yml


#CRD Delete for Rook
for CRD in $(kubectl get crd -n rook-ceph | awk '/ceph.rook.io/ {print $1}'); do
    kubectl get -n rook-ceph "$CRD" -o name | \
    xargs -I {} kubectl patch -n rook-ceph {} --type merge -p '{"metadata":{"finalizers": [null]}}'
done


kubectl -n rook-ceph patch configmap rook-ceph-mon-endpoints --type merge -p '{"metadata":{"finalizers": [null]}}'
kubectl -n rook-ceph patch secrets rook-ceph-mon --type merge -p '{"metadata":{"finalizers": [null]}}'


kubectl patch storageclass rook-cephfs -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'

kubectl -n rook-ceph get secret rook-ceph-dashboard-password -o jsonpath="{['data']['password']}" | base64 --decode && echo